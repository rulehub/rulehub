name: python-lock-update

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI image (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  push:
    branches: [main]

permissions:
  contents: read
  packages: read
  # packages:read enables authenticated GHCR pulls for CI images

jobs:
  noop-push:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "python-lock-update is manual; noop on push for visibility."
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    env:
      CI_IMAGE_TAG: ${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || vars.CI_IMAGE_TAG || '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  update-locks:
    if: ${{ github.actor != 'nektos/act' }}
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          persist-credentials: true

      # pip-tools provided by CI container image

      - name: Login to GHCR (read-only)
        env:
          GHCR_USER: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin || echo "GHCR login failed; continuing anonymously"
      - name: Regenerate locks inside CI image
        run: |
          docker run --rm -u 0:0 -v "$PWD:/workspace" -w /workspace "${{ needs.resolve.outputs.image }}" bash -lc 'make lock lock-dev'

      - name: Detect changes
        id: gitdiff
        run: |
          if git diff --quiet requirements.lock requirements-dev.lock; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create PR
        if: steps.gitdiff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e
        with:
          commit-message: "chore(deps): update python lock files"
          title: "chore(deps): weekly python lock refresh"
          body: "Automated weekly refresh of requirements.lock and requirements-dev.lock."
          branch: chore/update-python-locks
          labels: dependencies, automated-pr
          signoff: true

      - name: No changes
        if: steps.gitdiff.outputs.changed != 'true'
        run: echo "Lock files already up to date."
  resolve:
    name: Resolve CI image (ci-base)
    needs: guard
    runs-on: ubuntu-latest
    env:
      CI_IMAGE_TAG: ${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || vars.CI_IMAGE_TAG || '' }}
    outputs:
      image: ${{ steps.r.outputs.image }}
      tag: ${{ steps.r.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Resolve image
        id: r
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base

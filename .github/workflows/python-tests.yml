name: python-tests

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  pull_request:
    paths:
      - "tools/**"
      - "tests/tools/**"
      - "requirements-dev.*"
      - "requirements.*"
  push:
    branches: [main, master]
    paths:
      - "tools/**"
      - "tests/tools/**"
      - "requirements-dev.*"
      - "requirements.*"

permissions:
  contents: read
  packages: read

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    name: Resolve CI image (base)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.resolve.outputs.image }}
      tag: ${{ steps.resolve.outputs.tag }}
    steps:
      - name: Resolve CI image tag and ref
        id: resolve
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base
  tests:
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    container:
      image: "${{ needs.resolve.outputs.image }}"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Prepare Python env (venv with baked deps)
        run: |
          bash .github/scripts/python-venv-install.sh

      - name: Run pytest (tools)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: bash .github/scripts/python-ensure-and-run.sh "import pytest, yaml, jsonschema" pytest -q tests/tools

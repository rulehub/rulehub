name: python-tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "tools/**"
      - "tests/tools/**"
      - "requirements-dev.*"
      - "requirements.*"
  push:
    branches: [main, master]
    paths:
      - "tools/**"
      - "tests/tools/**"
      - "requirements-dev.*"
      - "requirements.*"

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.13"]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      # Node not required; skip to avoid act runner action fetch issues
      - name: Skip Node setup under act
        if: ${{ github.actor == 'nektos/act' }}
        run: echo "Skipping Node setup under act"

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "${{ matrix.python-version }}"
          cache: pip
          cache-dependency-path: |
            requirements.lock
            requirements.txt
            requirements-dev.lock
            requirements-dev.txt

      - name: Cache virtualenv
        id: cache-venv
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements*.{txt,lock}') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install deps
        run: |
          if [ ! -d .venv ]; then python -m venv .venv; fi
          . .venv/bin/activate
          python -m pip install -U pip
          if [ -f requirements-dev.lock ]; then pip install -r requirements-dev.lock; else pip install -r requirements-dev.txt; fi
          pip install -r requirements.txt

      - name: Run pytest (tools)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          . .venv/bin/activate
          pytest -q tests/tools

name: python-lint

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  pull_request:
    paths:
      - "tools/**.py"
      - "ruff.toml"
  # Temporary: run on push to main; may switch to tag triggers later
  push:
    branches: [main]
    paths:
      - "tools/**.py"
      - "ruff.toml"

permissions:
  contents: read
  security-events: write # needed for SARIF upload
  packages: read # needed to pull GHCR images with GITHUB_TOKEN

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.r.outputs.image }}
      tag: ${{ steps.r.outputs.tag }}
    steps:
      - name: Resolve CI image
        id: r
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base

  resolve:
    name: Resolve CI image (base)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.passthrough.outputs.image }}
      tag: ${{ steps.passthrough.outputs.tag }}
    steps:
      - name: Emit outputs
        id: passthrough
        shell: bash
        run: |
          echo "image=${{ needs.guard.outputs.image }}" >> "$GITHUB_OUTPUT"
          echo "tag=${{ needs.guard.outputs.tag }}" >> "$GITHUB_OUTPUT"

  ruff:
    needs: [resolve]
    runs-on: ubuntu-latest
    container:
      image: "${{ needs.resolve.outputs.image }}"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      # Node not required for ruff run itself; skip to save time

      - name: Ruff check (tools/*.py) + SARIF
        run: |
          ruff check tools --output-format sarif | tee ruff.sarif
        continue-on-error: true # still upload SARIF even if failures

  # Separate upload job to avoid cloning actions in the ruff job under ACT
  upload-sarif:
    if: ${{ github.actor != 'nektos/act' }}
    needs: [resolve]
    runs-on: ubuntu-latest
    container:
      image: "${{ needs.resolve.outputs.image }}"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Ruff check (tools/*.py) to SARIF (upload job)
        run: |
          ruff check tools --output-format sarif > ruff.sarif || true
      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@528ca598d956c91826bd742262cdfc5d02b77710
        with:
          sarif_file: ruff.sarif

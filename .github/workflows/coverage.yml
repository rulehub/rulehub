name: Coverage Map

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  pull_request:
    paths:
      - "policies/**"
      - "compliance/maps/**"
      - "tools/coverage_map.py"
      - "addons/**"
  push:
    paths:
      - "policies/**"
      - "compliance/maps/**"
      - "tools/coverage_map.py"
      - "addons/**"

permissions:
  contents: read

concurrency:
  group: coverage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  act-noop:
    if: ${{ github.actor == 'nektos/act' }}
    name: act noop
    runs-on: ubuntu-latest
    steps:
      - name: No-op under act
        run: 'echo "coverage: noop under act"'
  guard:
    if: ${{ github.actor != 'nektos/act' }}
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    if: ${{ github.actor != 'nektos/act' }}
    name: Resolve CI image (base)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.resolve.outputs.image }}
      tag: ${{ steps.resolve.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Resolve CI image tag and ref
        id: resolve
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base
  build:
    if: ${{ github.actor != 'nektos/act' }}
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.resolve.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    timeout-minutes: 10
    steps:
      - name: Skip under act
        if: ${{ github.actor == 'nektos/act' }}
        run: echo "[act] Skipping coverage build job"
      - name: Checkout
        if: ${{ github.actor != 'nektos/act' }}
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Install dependencies
        if: ${{ github.actor != 'nektos/act' }}
        run: |
          python-venv-install

      - name: Generate coverage and validate (container)
        if: ${{ github.actor != 'nektos/act' }}
        run: |
          bash .github/scripts/coverage-enforce.sh

      - name: Upload artifacts
        if: ${{ github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4
        with:
          name: coverage-artifacts
          path: |
            docs/coverage.md
            dist/coverage.html
            dist/policies-index.json
            dist/coverage.json
            dist/index.json

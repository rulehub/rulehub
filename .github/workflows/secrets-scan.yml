name: security-secrets

on:
  pull_request:
  push:
    branches: [main, master]

permissions:
  contents: read

jobs:
  trufflehog-scan:
    name: TruffleHog secret scan
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0

      - name: Detect local/act or skip-supplychain mode
        id: env_flags
        run: |
          set -euo pipefail
          skip=false
          if [ "${SKIP_SUPPLYCHAIN-}" = "1" ]; then
            skip=true
          fi
          echo "skip_supplychain=${skip}" >> "$GITHUB_OUTPUT"

      - name: Check PR base vs head
        id: check-diff
        run: bash .github/scripts/check-pr-diff.sh

      - name: Run TruffleHog via Docker (git range or filesystem)
        if: steps.env_flags.outputs.skip_supplychain != 'true' && steps.check-diff.outputs.skip != 'true'
        env:
          BASE: ${{ steps.check-diff.outputs.base }}
          HEAD: ${{ steps.check-diff.outputs.head }}
          TRUFFLEHOG_VERSION: 3.74.0
        run: bash .github/scripts/trufflehog-scan.sh

      - name: Skip TruffleHog (BASE==HEAD or SKIP_SUPPLYCHAIN)
        if: steps.check-diff.outputs.skip == 'true' || steps.env_flags.outputs.skip_supplychain == 'true'
        run: |
          echo "::warning::Skipping TruffleHog scan (BASE==HEAD or local act run)."

      - name: Post short PR summary
        if: ${{ github.event_name == 'pull_request' && steps.env_flags.outputs.skip_supplychain != 'true' && github.actor != 'nektos/act' }}
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
        with:
          script: |
            const body = [
              '### Secret scanning',
              '- Tool: TruffleHog',
              '- See job logs for findings. Job fails if verified secrets are detected.'
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

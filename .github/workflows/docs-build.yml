name: docs-build

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., 2025.10.03-a1b2c3d4 or v1.2.3). Falls back to repo variable CI_IMAGE_TAG or latest."
        required: false
        default: ""
  pull_request:
    paths:
      - "docs/**"
      - "mkdocs.yml"
      - ".github/workflows/docs-build.yml"
      - "README.md"
  push:
    branches: [main]
    paths:
      - "docs/**"
      - "mkdocs.yml"
      - ".github/workflows/docs-build.yml"
      - "README.md"

permissions:
  contents: read
  packages: read

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  build-docs:
    needs: guard
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-base:${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || (vars.CI_IMAGE_TAG != '' && vars.CI_IMAGE_TAG || '2025.10.03-f072ceb5') }}"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Prepare Python env (venv with baked deps)
        run: |
          python-venv-install
      - name: Build (strict)
        shell: bash
        run: |
          . .venv/bin/activate
          # Ensure mkdocs is available (images may skip dev installs under act)
          mkdocs --version >/dev/null 2>&1 || pip install --no-input mkdocs mkdocs-material mkdocs-get-deps mkdocs-material-extensions ghp-import
          mkdocs build --strict --verbose

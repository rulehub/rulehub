name: Lint YAML

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Optional; falls back to repo/org CI_IMAGE_TAG or pinned fallback."
        required: false
        default: ""

permissions:
  contents: read
  security-events: write

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    name: Resolve CI image (ci-base)
    runs-on: ubuntu-latest
    needs: guard
    outputs:
      image: ${{ steps.r.outputs.image }}
      tag: ${{ steps.r.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Resolve image
        id: r
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base

  yamllint:
    name: Lint YAML files (Spectral + yamllint)
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.resolve.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Run yamllint (parsable)
        run: |
          yamllint . -f parsable

      - name: Run Spectral (JSON->SARIF)
        run: |
          bash .github/scripts/spectral-lint.sh --ruleset .spectral.yml --out spectral.sarif || true
        continue-on-error: true

  upload-sarif:
    name: Upload SARIF to code scanning
    if: ${{ github.actor != 'nektos/act' }}
    runs-on: ubuntu-latest
    needs: [yamllint, resolve]
    permissions:
      contents: read
      security-events: write
    container:
      image: ${{ needs.resolve.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Recreate Spectral SARIF (JSON->SARIF)
        run: |
          bash .github/scripts/spectral-lint.sh --ruleset .spectral.yml --out spectral.sarif || true
        continue-on-error: true

      - name: Upload Spectral SARIF
        uses: github/codeql-action/upload-sarif@528ca598d956c91826bd742262cdfc5d02b77710
        with:
          sarif_file: spectral.sarif

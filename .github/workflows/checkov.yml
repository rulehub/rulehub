name: security-checkov

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main, master]

permissions:
  contents: read
  security-events: write # for SARIF upload
  pull-requests: write # to comment on PRs

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checkov-scan-gh:
    if: ${{ github.actor != 'nektos/act' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Detect Docker availability
        id: docker
        run: |
          set -euo pipefail
          if command -v docker >/dev/null 2>&1 && docker info >/dev/null 2>&1; then
            echo "available=true" >> "$GITHUB_OUTPUT"
          else
            echo "available=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run Checkov (Docker) and produce SARIF
        if: ${{ steps.docker.outputs.available == 'true' }}
        env:
          # Pinned image digest is required. Prefer repository variable, but allow secrets/env for act or local runs.
          CHECKOV_IMAGE_DIGEST: ${{ vars.CHECKOV_IMAGE_DIGEST || secrets.CHECKOV_IMAGE_DIGEST || env.CHECKOV_IMAGE_DIGEST }}
        run: |
          set -euo pipefail
          REPO="bridgecrew/checkov"
          if [ -n "${CHECKOV_IMAGE_DIGEST:-}" ]; then
            IMG="$REPO@${CHECKOV_IMAGE_DIGEST}"
          else
            echo "ERROR: CHECKOV_IMAGE_DIGEST is required (sha256:...) and must be pinned; refusing to use ':latest'."
            exit 1
          fi
          docker run --rm -v "$PWD:/workspace" -w /workspace "$IMG" \
            checkov -d . --framework kubernetes \
            --skip-path tests/kyverno --skip-path tests/gatekeeper \
            --output sarif --output-file-path checkov.sarif \
            --quiet || true

      - name: Note when Docker is unavailable
        if: ${{ steps.docker.outputs.available != 'true' }}
        run: |
          echo "::notice::Docker not available; skipping Checkov run."

      - name: Upload SARIF to Code Scanning
        if: ${{ hashFiles('checkov.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@528ca598d956c91826bd742262cdfc5d02b77710
        with:
          sarif_file: checkov.sarif

      - name: Comment summary in PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [ -s checkov.sarif ] && command -v jq >/dev/null 2>&1; then
            total=$(jq '[(.runs[]?.results // [])[]] | length' checkov.sarif)
          else
            total=0
          fi
          printf "CKV_SUMMARY<<'EOF'\n" >> $GITHUB_ENV
          echo "### Checkov scan" >> $GITHUB_ENV
          echo "- Findings: $total" >> $GITHUB_ENV
          echo "- SARIF uploaded to Code scanning (tool: Checkov)." >> $GITHUB_ENV
          echo "- See Security > Code scanning alerts for full details." >> $GITHUB_ENV
          printf "EOF\n" >> $GITHUB_ENV

      - name: Create or update PR comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043
        env:
          CKV_SUMMARY: ${{ env.CKV_SUMMARY }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ env.CKV_SUMMARY }}

  checkov-scan-act:
    if: ${{ github.actor == 'nektos/act' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Detect Docker availability
        id: docker
        run: |
          set -euo pipefail
          if command -v docker >/dev/null 2>&1 && docker info >/dev/null 2>&1; then
            echo "available=true" >> "$GITHUB_OUTPUT"
          else
            echo "available=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run Checkov (Docker) and produce SARIF
        if: ${{ steps.docker.outputs.available == 'true' }}
        env:
          ACT: "true"
          # Pinned image digest is required for act runs too; accept repo var, secret, or env.
          CHECKOV_IMAGE_DIGEST: ${{ vars.CHECKOV_IMAGE_DIGEST || secrets.CHECKOV_IMAGE_DIGEST || env.CHECKOV_IMAGE_DIGEST }}
        run: |
          set -euo pipefail
          REPO="bridgecrew/checkov"
          if [ -n "${CHECKOV_IMAGE_DIGEST:-}" ]; then
            IMG="$REPO@${CHECKOV_IMAGE_DIGEST}"
          else
            echo "[act] CHECKOV_IMAGE_DIGEST not provided; skipping Checkov scan under act (no network pulls)." >&2
            echo "Hint: provide via repository Variables, or pass to act with --secret-file (CHECKOV_IMAGE_DIGEST=sha256:<digest>) or --env CHECKOV_IMAGE_DIGEST=sha256:<digest> to enable the scan locally." >&2
            exit 0
          fi
          docker run --rm -v "$PWD:/workspace" -w /workspace "$IMG" \
            checkov -d . --framework kubernetes \
            --skip-path tests/kyverno --skip-path tests/gatekeeper \
            --output sarif --output-file-path checkov.sarif \
            --quiet || true

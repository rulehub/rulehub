name: OPA Test (Betting Full)
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub policy image (e.g., 2025.10.03-a1b2c3d4 or v1.2.3). Falls back to repo variable CI_IMAGE_TAG or latest."
        required: false
        default: ""

permissions:
  contents: read
jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Enforce non-latest CI image tag
        shell: bash
        run: |
          input_tag="${{ inputs.ci_image_tag }}"
          if [ "$input_tag" = "latest" ]; then
            echo "Workflow input ci_image_tag must not be 'latest'. Use an immutable tag (e.g., 2025.10.03-<sha> or vX.Y.Z)." >&2
            exit 1
          fi
          if [ -z "$input_tag" ]; then
            echo "Note: ci_image_tag input not provided. Ensure repository variable CI_IMAGE_TAG is set to a pinned tag to avoid drift." >&2
          fi
  probe-ghcr:
    name: Probe GHCR access (ci-policy)
    needs: guard
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      can_pull: ${{ steps.probe.outputs.can_pull }}
    steps:
      - name: Try anonymous pull (ci-policy)
        id: probe
        shell: bash
        run: |
          set -euo pipefail
          IMAGE_REF="ghcr.io/${{ github.repository_owner }}/ci-policy:${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || (vars.CI_IMAGE_TAG != '' && vars.CI_IMAGE_TAG || '2025.10.03-f072ceb5') }}"
          echo "Probing anonymous pull for $IMAGE_REF"
          if docker pull "$IMAGE_REF"; then
            echo "can_pull=true" >> "$GITHUB_OUTPUT"
          else
            echo "can_pull=false" >> "$GITHUB_OUTPUT"
          fi

  test:
    needs: [guard, probe-ghcr]
    if: ${{ needs.probe-ghcr.outputs.can_pull == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-policy:${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || (vars.CI_IMAGE_TAG != '' && vars.CI_IMAGE_TAG || '2025.10.03-f072ceb5') }}"
      options: --user 0:0
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: OPA version (from CI image)
        run: opa version
      - name: Run OPA tests (betting)
        run: opa test -v policies/betting

  test-fallback:
    name: OPA tests (fallback, no container)
    needs: [guard, probe-ghcr]
    if: ${{ needs.probe-ghcr.outputs.can_pull != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Setup OPA (host)
        run: |
          set -euo pipefail
          curl -sSL -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64_static
          chmod +x opa
          sudo mv opa /usr/local/bin/opa
          opa version
      - name: Run OPA tests (betting) on host
        run: |
          opa test -v policies/betting

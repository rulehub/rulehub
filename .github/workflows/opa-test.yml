name: OPA Test (Betting Full)
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub policy image (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""

permissions:
  contents: read

concurrency:
  group: opa-test-${{ github.ref }}
  cancel-in-progress: true
jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    name: Resolve CI image (ci-policy)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.r.outputs.image }}
      tag: ${{ steps.r.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Resolve image
        id: r
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: policy

  test:
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    container:
      image: "${{ needs.resolve.outputs.image }}"
      options: --user 0:0
    # Assumes ci-policy image already built & published by ci-images build-publish workflow.
    # Local act: override via CI_IMAGE_TAG=dev-local and -P image remap.
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: OPA version (from CI image)
        run: opa version
      - name: Run OPA tests (betting)
        run: opa test -v policies/betting

  test-fallback:
    name: OPA tests (fallback, no container)
    needs: [guard, test]
    if: ${{ needs.test.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Setup OPA (host)
        run: |
          set -euo pipefail
          bash .github/scripts/install-opa.sh
          opa version
      - name: Run OPA tests (betting) on host
        run: |
          opa test -v policies/betting

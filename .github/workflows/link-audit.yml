name: link-audit

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., 2025.10.03-a1b2c3d4 or v1.2.3). Falls back to repo variable CI_IMAGE_TAG or latest."
        required: false
        default: ""
  pull_request:
    paths:
      - "policies/**"
      - "tools/audit_links.py"
      - "tools/validate_links_baseline.py"
      - "links_audit_baseline.json"
      - ".github/workflows/link-audit.yml"
  push:
    branches: [main]
    paths:
      - "policies/**"
      - "tools/audit_links.py"
      - "tools/validate_links_baseline.py"
      - "links_audit_baseline.json"
      - ".github/workflows/link-audit.yml"

permissions:
  contents: read
  actions: write

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Enforce non-latest CI image tag
        shell: bash
        run: |
          input_tag="${{ inputs.ci_image_tag }}"
          if [ "$input_tag" = "latest" ]; then
            echo "Workflow input ci_image_tag must not be 'latest'. Use an immutable tag (e.g., 2025.10.03-<sha> or vX.Y.Z)." >&2
            exit 1
          fi
          if [ -z "$input_tag" ]; then
            echo "Note: ci_image_tag input not provided. Ensure repository variable CI_IMAGE_TAG is set to a pinned tag to avoid drift." >&2
          fi
  audit:
    needs: guard
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/${{ github.repository_owner }}/ci-base:${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || (vars.CI_IMAGE_TAG != '' && vars.CI_IMAGE_TAG || '2025.10.03-f072ceb5') }}"
      options: --user 0:0
    defaults:
      run:
        shell: bash
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Prepare Python env (venv with baked deps)
        run: |
          python-venv-install
      - name: Run link audit
        run: |
          . .venv/bin/activate
          set -euo pipefail
          # Ensure minimal deps are present if image skipped installs
          python -c "import yaml, jsonschema" 2>/dev/null || pip install --no-input pyyaml jsonschema
          # Generate current link audit report (JSON)
          python tools/analyze_links.py --export links_export.json --json links_audit_report.json
          # Compare against baseline; honors FAIL_LINK_AUDIT=1 to fail on drift
          python tools/compare_links_baseline.py | tee link_audit_output.txt
      - name: Upload audit summary & baseline
        if: ${{ always() && github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: link-audit
          path: |
            link_audit_output.txt
            links_audit_baseline.json

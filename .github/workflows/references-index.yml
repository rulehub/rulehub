name: references-index

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  pull_request:
    paths:
      - "policies/**"
      - "tools/generate_refs_index.py"
      - ".github/workflows/references-index.yml"
  push:
    branches: [main]
    paths:
      - "policies/**"
      - "tools/generate_refs_index.py"
      - ".github/workflows/references-index.yml"
  # legacy manual trigger kept above with inputs

permissions:
  contents: read
  packages: read

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    name: Resolve CI image (base)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.resolve.outputs.image }}
      tag: ${{ steps.resolve.outputs.tag }}
    steps:
      - name: Resolve CI image tag and ref
        id: resolve
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base
  build-index:
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    container:
      image: ${{ github.actor == 'nektos/act' && 'ghcr.io/catthehacker/ubuntu:act-22.04' || needs.resolve.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Prepare Python env (venv with baked deps)
        run: |
          if command -v python-venv-install >/dev/null 2>&1; then
            python-venv-install
          else
            set -euo pipefail
            if ! command -v python3 >/dev/null 2>&1; then
              apt-get update && apt-get install -y python3 python3-venv python3-pip
            fi
            python3 -m venv .venv
            . .venv/bin/activate
            if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          fi
      - name: Generate references index (md+json)
        run: |
          . .venv/bin/activate
          bash .github/scripts/python-ensure-and-run.sh "import yaml, jsonschema" python tools/generate_refs_index.py --format both --fail-missing-links
          ls -l docs/references-index.md dist/references-index.json || true

  # Run artifact upload in a separate job so act does not need to fetch the action when skipped
  upload-index:
    needs: [resolve, build-index]
    if: ${{ github.actor != 'nektos/act' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      actions: write
      packages: read
    container:
      image: ${{ needs.resolve.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Prepare Python env (venv with baked deps)
        run: |
          if command -v python-venv-install >/dev/null 2>&1; then
            python-venv-install
          else
            set -euo pipefail
            if ! command -v python3 >/dev/null 2>&1; then
              apt-get update && apt-get install -y python3 python3-venv python3-pip
            fi
            python3 -m venv .venv
            . .venv/bin/activate
            if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          fi
      - name: Generate references index (md+json)
        run: |
          . .venv/bin/activate
          bash .github/scripts/python-ensure-and-run.sh "import yaml, jsonschema" python tools/generate_refs_index.py --format both --fail-missing-links
          ls -l docs/references-index.md dist/references-index.json || true
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: references-index
          path: |
            docs/references-index.md
            dist/references-index.json

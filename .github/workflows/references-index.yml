name: references-index

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  pull_request:
    paths:
      - "policies/**"
      - "tools/generate_refs_index.py"
      - ".github/workflows/references-index.yml"
  push:
    branches: [main]
    paths:
      - "policies/**"
      - "tools/generate_refs_index.py"
      - ".github/workflows/references-index.yml"
  # legacy manual trigger kept above with inputs

permissions:
  contents: read
  packages: read
  # packages:read allows an authenticated pull for GHCR images used in docker run steps

env:
  # Default empty; nektos/act sets ACT=true in jobs. This allows using env.ACT in conditions without linter complaints.
  ACT: ""

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        if: ${{ env.ACT != 'true' }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Enforce non-latest CI image tag
        shell: bash
        env:
          CI_IMAGE_TAG: ${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || vars.CI_IMAGE_TAG || '' }}
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    name: Resolve CI image (base)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.resolve.outputs.image }}
      tag: ${{ steps.resolve.outputs.tag }}
    steps:
      - name: Checkout
        if: ${{ env.ACT != 'true' }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Resolve CI image tag and ref
        id: resolve
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base
  build-index:
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        if: ${{ env.ACT != 'true' }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Login to GHCR (read-only)
        env:
          GHCR_USER: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin || echo "GHCR login failed; continuing anonymously"
      - name: Generate references index (md+json) inside CI image
        run: |
          docker run --rm -u 0:0 -v "$PWD:/workspace" -w /workspace "${{ needs.resolve.outputs.image }}" bash -lc '
            set -euo pipefail
            if command -v python-venv-install >/dev/null 2>&1; then
              python-venv-install
            else
              bash .github/scripts/python-venv-install.sh
            fi
            . .venv/bin/activate
            bash .github/scripts/python-ensure-and-run.sh "import yaml, jsonschema" python tools/generate_refs_index.py --format both --fail-missing-links
            ls -l docs/references-index.md dist/references-index.json || true
          '

  # Run artifact upload in a separate job so act does not need to fetch the action when skipped
  upload-index:
    needs: [resolve, build-index]
    if: ${{ github.actor != 'nektos/act' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Login to GHCR (read-only)
        env:
          GHCR_USER: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin || echo "GHCR login failed; continuing anonymously"
      - name: Generate references index (md+json) inside CI image
        run: |
          docker run --rm -u 0:0 -v "$PWD:/workspace" -w /workspace "${{ needs.resolve.outputs.image }}" bash -lc '
            set -euo pipefail
            if command -v python-venv-install >/dev/null 2>&1; then
              python-venv-install
            else
              bash .github/scripts/python-venv-install.sh
            fi
            . .venv/bin/activate
            bash .github/scripts/python-ensure-and-run.sh "import yaml, jsonschema" python tools/generate_refs_index.py --format both --fail-missing-links
            ls -l docs/references-index.md dist/references-index.json || true
          '
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: references-index
          path: |
            docs/references-index.md
            dist/references-index.json

name: python-mypy

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  pull_request:
    paths:
      - "tools/**.py"
      - "mypy.ini"
      - ".github/workflows/python-mypy.yml"
  # Temporary: run on push to main; may switch to tag triggers later
  push:
    branches: [main]
    paths:
      - "tools/**.py"
      - "mypy.ini"
      - ".github/workflows/python-mypy.yml"

permissions:
  contents: read
  packages: read

jobs:
  guard:
    name: Require CI image tag (no drift)
    uses: ./.github/workflows/resolve-ci-image.yml
    with:
      ci_image_tag: ${{ inputs.ci_image_tag }}
      kind: base
  resolve:
    name: Resolve CI image (base)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.passthrough.outputs.image }}
      tag: ${{ steps.passthrough.outputs.tag }}
    steps:
      - name: Emit outputs
        id: passthrough
        shell: bash
        run: |
          echo "image=${{ needs.guard.outputs.image }}" >> "$GITHUB_OUTPUT"
          echo "tag=${{ needs.guard.outputs.tag }}" >> "$GITHUB_OUTPUT"
  mypy:
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    env:
      ACT: "true"
    container:
      image: "${{ needs.resolve.outputs.image }}"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      # Python and mypy provided by CI container; install project deps using helper
      - name: Prepare environment (venv with baked deps)
        run: |
          bash .github/scripts/python-venv-install.sh
      - name: Run mypy
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: bash .github/scripts/run-mypy.sh

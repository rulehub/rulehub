name: docs-publish

# Publishes MkDocs site to GitHub Pages.
# Triggers:
#  - Manual dispatch
#  - On published release (GitHub Release created by release-please or manually)
# Ensure mkdocs.yml `site_url` matches: https://<org_or_user>.github.io/<repo>/
on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  release:
    types: [published]
  # Temporary: run on push to main; will primarily be driven by release tags later
  push:
    branches: [main]

permissions:
  contents: write
  packages: read

jobs:
  noop-push:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "docs-publish runs on release/manual; noop on push for visibility."
  guard:
    if: ${{ github.actor != 'nektos/act' }}
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      CI_IMAGE_TAG: ${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || vars.CI_IMAGE_TAG || '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    if: ${{ github.actor != 'nektos/act' }}
    name: Resolve CI image (ci-base)
    needs: guard
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      CI_IMAGE_TAG: ${{ inputs.ci_image_tag != '' && inputs.ci_image_tag || vars.CI_IMAGE_TAG || '' }}
    outputs:
      image: ${{ steps.r.outputs.image }}
      tag: ${{ steps.r.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Resolve image
        id: r
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base
  build-and-deploy:
    # Skip under act; publishing to Pages is CI-only
    if: ${{ github.actor != 'nektos/act' }}
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    container:
      image: "${{ needs.resolve.outputs.image }}"
      options: --user 0:0
    timeout-minutes: 15
    concurrency:
      group: docs-publish
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Build docs
        shell: bash
        run: bash .github/scripts/mkdocs-build.sh

      - name: Validate site_url
        run: |
          URL_LINE=$(grep -E '^site_url:' mkdocs.yml || true)
          if [ -z "$URL_LINE" ]; then
            echo "::warning::site_url not set in mkdocs.yml; recommended for canonical URLs";
          else
            echo "Found $URL_LINE";
          fi

      - name: Deploy to GitHub Pages (gh-pages)
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          force_orphan: true
          commit_message: "docs: publish site"

  noop-act:
    if: ${{ github.actor == 'nektos/act' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "[act] docs-publish skipped."

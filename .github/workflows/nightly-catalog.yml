name: Nightly Catalog Build

on:
  workflow_dispatch:
    inputs:
      force:
        description: "Force run full catalog build even under act"
        required: false
        default: "false"
  push:
    branches: [main]

permissions:
  contents: read
  packages: read
  actions: write
concurrency:
  group: nightly-catalog
  cancel-in-progress: true
jobs:
  noop-push:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "nightly-catalog is manual/scheduled; noop on push for visibility."
  build-catalog:
    # Skip on act unless workflow_dispatch input force == true
    if: ${{ !contains(github.actor, 'nektos/act') || github.event.inputs.force == 'true' }}
    continue-on-error: ${{ contains(github.actor, 'nektos/act') }}
    name: Generate catalog index
    needs: [resolve]
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.resolve.outputs.image }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --user 0:0
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Build catalog
        id: build_catalog
        uses: ./.github/actions/build-catalog
        with:
          min-packages: 5
          make-target: catalog

      - name: Upload index artifact
        if: ${{ github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: nightly-index-json
          path: dist/index.json
          if-no-files-found: error
          retention-days: 7
      - name: Catalog stats (outputs)
        run: |
          echo "packages=${{ steps.build_catalog.outputs.packages }} sha16=${{ steps.build_catalog.outputs.sha256 }} seconds=${{ steps.build_catalog.outputs['build-seconds'] }}"

  noop-act:
    if: ${{ contains(github.actor, 'nektos/act') }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "[act] nightly-catalog skipped."
  resolve:
    if: ${{ !contains(github.actor, 'nektos/act') || github.event.inputs.force == 'true' }}
    name: Resolve CI image (ci-base)
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.r.outputs.image }}
      tag: ${{ steps.r.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Resolve image
        id: r
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ vars.CI_IMAGE_TAG }}
          kind: base

name: link-audit-history

on:
  workflow_dispatch:
    inputs:
      ci_image_tag:
        description: "CI image tag for RuleHub CI images (e.g., YYYY.MM.DD-<sha> or v1.2.3). Falls back to repo/org variable CI_IMAGE_TAG or the repository's pinned fallback."
        required: false
        default: ""
  push:
    branches: [main]

permissions:
  contents: read
  actions: write

jobs:
  guard:
    name: Require CI image tag (no drift)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Enforce non-latest CI image tag
        shell: bash
        run: bash .github/scripts/guard-ci-image-tag.sh "${{ inputs.ci_image_tag }}"
  resolve:
    name: Resolve CI image (ci-base)
    needs: guard
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.r.outputs.image }}
      tag: ${{ steps.r.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
      - name: Resolve image
        id: r
        uses: ./.github/actions/resolve-ci-image
        with:
          ci_image_tag: ${{ inputs.ci_image_tag }}
          kind: base
  append-history-gh:
    name: Append history + upload (GitHub)
    if: ${{ github.actor != 'nektos/act' }}
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    container:
      image: "${{ needs.resolve.outputs.image }}"
      options: --user 0:0
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Install dependencies
        run: |
          python-venv-install

      - name: Check if today's row already exists
        id: check
        run: |
          DATE=$(date -u +%F)
          if [ -f links_audit_history.csv ] && grep -q "^${DATE}," links_audit_history.csv; then
            echo "Row for ${DATE} already present; skipping append." | tee link_audit_history_skip.txt
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Run link audit history append
        if: steps.check.outputs.skip != 'true'
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          . .venv/bin/activate
          bash .github/scripts/run-link-audit-history.sh

      - name: Show last 5 history rows
        if: always()
        run: |
          if [ -f links_audit_history.csv ]; then
            echo '--- tail links_audit_history.csv'; tail -n 6 links_audit_history.csv; fi

      - name: Upload history artifact (retain for 30 days)
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: links-audit-history
          path: |
            links_audit_history.csv
            link_audit_history_run.txt
            link_audit_history_skip.txt
          if-no-files-found: ignore
          retention-days: 30

      - name: Summary note
        if: always()
        run: |
          echo "Link audit history retained as artifact only (not committed to git)." >> $GITHUB_STEP_SUMMARY

  append-history-act:
    name: Append history (act)
    if: ${{ github.actor == 'nektos/act' }}
    needs: [guard, resolve]
    runs-on: ubuntu-latest
    container:
      image: "${{ needs.resolve.outputs.image }}"
      options: --user 0:0
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Install dependencies
        run: |
          python-venv-install

      - name: Check if today's row already exists
        id: check
        run: |
          DATE=$(date -u +%F)
          if [ -f links_audit_history.csv ] && grep -q "^${DATE}," links_audit_history.csv; then
            echo "Row for ${DATE} already present; skipping append." | tee link_audit_history_skip.txt
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Run link audit history append
        if: steps.check.outputs.skip != 'true'
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          . .venv/bin/activate
          bash .github/scripts/run-link-audit-history.sh

      - name: Show last 5 history rows
        if: always()
        run: |
          if [ -f links_audit_history.csv ]; then
            echo '--- tail links_audit_history.csv'; tail -n 6 links_audit_history.csv; fi

      - name: Summary note
        if: always()
        run: |
          echo "Link audit history retained as artifact only (not committed to git)." >> $GITHUB_STEP_SUMMARY

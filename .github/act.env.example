# Example environment variables for local runs with nektos/act.
# Copy this file to `.github/act.env` and adjust if needed.
# Format: KEY=VALUE (one per line)

# Local nektos/act runs are auto-detected by workflows (no ACT flag required).

# Skip OIDC-dependent supply-chain steps (cosign signing, GHCR/ORAS pushes) in opa-bundle-publish.
SKIP_SUPPLYCHAIN=1

# (no tool version overrides are needed; CI images provide pinned toolchains)

# Optional: enforce Checkov image pin locally (parity with GitHub). Set to a digest value like sha256:...
# Used by: tools/ci/checkov-run.sh (if ACT is set) and .github/workflows/checkov.yml
# To obtain the digest:
#   docker pull bridgecrew/checkov:latest
#   docker image inspect --format '{{ index .RepoDigests 0 }}' bridgecrew/checkov:latest | sed 's/.*@//'
# Or with crane:  crane digest docker.io/bridgecrew/checkov:latest
# Or with skopeo: skopeo inspect docker://docker.io/bridgecrew/checkov:latest | jq -r '.Digest'
# CHECKOV_IMAGE_DIGEST=sha256:YOUR_DIGEST_HERE

# Optional: pin CI image tag for local runs.
# Used by: .github/actions/resolve-ci-image/action.yml (env fallback CI_IMAGE_TAG)
# CI_IMAGE_TAG=2025.10.10-fbec5f03
# CI_IMAGE_TAG=2025.01.01-00000000            # for local development images
# Note: When running workflows that use job-level containers resolved via CI_IMAGE_TAG under act,
# ensure your local Docker has RuleHub CI images built with the same tag, e.g.:
#   ghcr.io/<OWNER>/ci-base:${CI_IMAGE_TAG}
#   ghcr.io/<OWNER>/ci-policy:${CI_IMAGE_TAG}
#   ghcr.io/<OWNER>/ci-charts:${CI_IMAGE_TAG}
#   ghcr.io/<OWNER>/ci-frontend:${CI_IMAGE_TAG}
# Otherwise act will attempt to pull from the registry. Building locally keeps runs offline.
